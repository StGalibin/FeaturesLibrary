
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаписываюВКонтекстДанныеОбъектаМетаданных(Парам01,Парам02)","ЯЗаписываюВКонтекстДанныеОбъектаМетаданных","Дано Я записываю в контекст данные объекта метаданных ""Справочники"" ""Номенклатура""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПроверяюПравоДоступаПользователяНаВыполнениеОперации(Парам01,Парам02)","ЯПроверяюПравоДоступаПользователяНаВыполнениеОперации","Когда Я проверяю право доступа пользователя ""Работник"" на выполнение операции ""Чтение""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПроверяюОтсутствиеПраваДоступаПользователяНаВыполнениеОперации(Парам01,Парам02)","ЯПроверяюОтсутствиеПраваДоступаПользователяНаВыполнениеОперации","Когда Я проверяю отсутствие права доступа пользователя ""Работник"" на выполнение операции ""Чтение""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПроверяюПравоДоступаПользователяНаВыполнениеСОбъектомОперации(Парам01,Парам02,Парам03,Парам04)","ЯПроверяюПравоДоступаПользователяНаВыполнениеСОбъектомОперации","Когда Я проверяю право доступа пользователя ""Работник"" на выполнение с объектом ""Справочник"" ""Номенклатура"" операции ""Чтение""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПравоДоступаУстановлено()","ПравоДоступаУстановлено","Тогда Право доступа установлено","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПроверяюОтсутствиеПраваДоступаПользователяНаВыполнениеСОбъектомОперации(Парам01,Парам02,Парам03,Парам04)","ЯПроверяюОтсутствиеПраваДоступаПользователяНаВыполнениеСОбъектомОперации","Когда Я проверяю отсутствие права доступа пользователя ""Работник"" на выполнение с объектом ""Справочник"" ""Номенклатура"" операции ""Чтение""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПраваДоступаНаОбъектНет()","ПраваДоступаНаОбъектНет","Тогда Права доступа на объект нет","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////


&НаСервереБезКонтекста
Функция ПроверитьПравоДоступаНаСервере (ИмяПользователя,ВидОперации,ИсследуемыйОбъектМетаданныхСтрокой)

	Пользователь = Справочники.Пользователи.НайтиПоНаименованию(ИмяПользователя);
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Пользователь.ИдентификаторПользователяИБ);
	
	Если не ПользовательИБ = Неопределено Тогда
		
	ИсследуемыйОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ИсследуемыйОбъектМетаданныхСтрокой);
	
	Если не ИсследуемыйОбъектМетаданных = Неопределено Тогда
		
	Возврат ПравоДоступа(ВидОперации, ИсследуемыйОбъектМетаданных,ПользовательИБ);
	
	Иначе
		
	Сообщить ("Не найден объект метаданных!");
	
	Возврат Неопределено;
	
	КонецЕсли;
	

Иначе
	Сообщить ("Не найден Пользователь ИБ!");
	
	Возврат Неопределено;
	
	КонецЕсли;

	
КонецФункции // ПроверитьПравоДоступаНаСервере (ИмяПользователя,ВидОперации)()

&НаКлиенте
//Тогда Право доступа установлено
//@ПравоДоступаУстановлено()
Процедура ПравоДоступаУстановлено() Экспорт
	
	Если не Контекст.ЕстьПраво Тогда
		ВызватьИсключение "Нет прав доступа к разрешенному объекту!";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//Тогда Права доступа на объект нет
//@ПраваДоступаНаОбъектНет()
Процедура ПраваДоступаНаОбъектНет() Экспорт
	
	Если Контекст.ЕстьПраво Тогда
		ВызватьИсключение "Есть право доступа к запрщенному объекту!";
		КонецЕсли;

КонецПроцедуры

&НаКлиенте
//Когда Я проверяю право доступа пользователя "Работник" на выполнение с объектом "Справочник" "Номенклатура" операции "Чтение"
//@ЯПроверяюПравоДоступаПользователяНаВыполнениеСОбъектомОперации(Парам01,Парам02,Парам03,Парам04)
Процедура ЯПроверяюПравоДоступаПользователяНаВыполнениеСОбъектомОперации(ИмяПользователя,ИмяВидаОбъектаМетаданных,ИмяОбъектаМетаданных,ВидОперации) Экспорт
	
	Контекст.Вставить("ЕстьПраво", ПроверитьПравоДоступаНаСервере (ИмяПользователя,ВидОперации, ИмяВидаОбъектаМетаданных +"."+ИмяОбъектаМетаданных));
	
КонецПроцедуры

&НаКлиенте
//Когда Я проверяю отсутствие права доступа пользователя "Работник" на выполнение с объектом "Справочник" "Номенклатура" операции "Чтение"
//@ЯПроверяюОтсутствиеПраваДоступаПользователяНаВыполнениеСОбъектомОперации(Парам01,Парам02,Парам03,Парам04)
Процедура ЯПроверяюОтсутствиеПраваДоступаПользователяНаВыполнениеСОбъектомОперации(ИмяПользователя,ИмяВидаОбъектаМетаданных,ИмяОбъектаМетаданных,ВидОперации) Экспорт
	
	Контекст.Вставить("ЕстьПраво", ПроверитьПравоДоступаНаСервере (ИмяПользователя,ВидОперации, ИмяВидаОбъектаМетаданных +"."+ИмяОбъектаМетаданных));

КонецПроцедуры
